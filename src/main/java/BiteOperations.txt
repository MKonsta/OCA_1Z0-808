
& (логическое умножение)
Умножение производится поразрядно, и если у обоих операндов значения разрядов равно 1, то операция возвращает 1, иначе возвращается число 0. Например:

int a1 = 2; //010
 int b1 = 5;//101
 System.out.println(a1&b1); // результат 0

int a2 = 4; //100
int b2 = 5; //101
System.out.println(a2 & b2); // результат 4

В первом случае у нас два числа 2 и 5. 2 в двоичном виде представляет число 010, а 5 - 101. Поразрядное умножение чисел (0*1, 1*0, 0*1) дает результат 000.
Во втором случае у нас вместо двойки число 4, у которого в первом разряде 1, так же как и у числа 5, поэтому здесь результатом операции (1*1, 0*0, 0 *1) = 100 будет число 4 в десятичном формате.


~ (логическое отрицание)
Поразрядная операция, которая инвертирует все разряды числа: если значение разряда равно 1, то оно становится равным нулю, и наоборот.

byte a = 12;                 // 0000 1100
System.out.println(~a);     //  1111 0011   или -13